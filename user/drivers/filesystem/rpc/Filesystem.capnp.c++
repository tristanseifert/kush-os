// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Filesystem.capnp

#include "Filesystem.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<25> b_9ad0b8ebf0dd4a45 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  74, 221, 240, 235, 184, 208, 154,
     17,   0,   0,   0,   4,   0,   0,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  79, 112, 101, 110,  70, 105,
    108, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    103, 179,  72, 100, 202, 230, 202, 220,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ad0b8ebf0dd4a45 = b_9ad0b8ebf0dd4a45.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9ad0b8ebf0dd4a45 = {
  0x9ad0b8ebf0dd4a45, b_9ad0b8ebf0dd4a45.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9ad0b8ebf0dd4a45, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_e5381c4fa3dfa437 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55, 164, 223, 163,  79,  28,  56, 229,
     17,   0,   0,   0,   1,   0,   1,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  79, 112, 101, 110,  70, 105, 108,
    101,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e5381c4fa3dfa437 = b_e5381c4fa3dfa437.words;
#if !CAPNP_LITE
static const uint16_t m_e5381c4fa3dfa437[] = {1, 0};
static const uint16_t i_e5381c4fa3dfa437[] = {0, 1};
const ::capnp::_::RawSchema s_e5381c4fa3dfa437 = {
  0xe5381c4fa3dfa437, b_e5381c4fa3dfa437.words, 49, nullptr, m_e5381c4fa3dfa437,
  0, 2, i_e5381c4fa3dfa437, nullptr, nullptr, { &s_e5381c4fa3dfa437, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_a69d257840e3d9c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195, 217, 227,  64, 120,  37, 157, 166,
     17,   0,   0,   0,   1,   0,   3,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  79, 112, 101, 110,  70, 105, 108,
    101,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101,  83, 105, 122, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a69d257840e3d9c3 = b_a69d257840e3d9c3.words;
#if !CAPNP_LITE
static const uint16_t m_a69d257840e3d9c3[] = {2, 1, 0};
static const uint16_t i_a69d257840e3d9c3[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a69d257840e3d9c3 = {
  0xa69d257840e3d9c3, b_a69d257840e3d9c3.words, 65, nullptr, m_a69d257840e3d9c3,
  0, 3, i_a69d257840e3d9c3, nullptr, nullptr, { &s_a69d257840e3d9c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_b1873590ba78fd0f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 253, 120, 186, 144,  53, 135, 177,
     17,   0,   0,   0,   4,   0,   0,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  83, 108, 111, 119,  82, 101,
     97, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    242, 170, 163,   5,  10,  83,  19, 251,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1873590ba78fd0f = b_b1873590ba78fd0f.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b1873590ba78fd0f = {
  0xb1873590ba78fd0f, b_b1873590ba78fd0f.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b1873590ba78fd0f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_b3122e6aee4b00e2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226,   0,  75, 238, 106,  46,  18, 179,
     17,   0,   0,   0,   1,   0,   3,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  83, 108, 111, 119,  82, 101,  97,
    100,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  66, 121, 116, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b3122e6aee4b00e2 = b_b3122e6aee4b00e2.words;
#if !CAPNP_LITE
static const uint16_t m_b3122e6aee4b00e2[] = {0, 2, 1};
static const uint16_t i_b3122e6aee4b00e2[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b3122e6aee4b00e2 = {
  0xb3122e6aee4b00e2, b_b3122e6aee4b00e2.words, 65, nullptr, m_b3122e6aee4b00e2,
  0, 3, i_b3122e6aee4b00e2, nullptr, nullptr, { &s_b3122e6aee4b00e2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9ee0d86773199316 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     22, 147,  25, 115, 103, 216, 224, 158,
     17,   0,   0,   0,   1,   0,   1,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  83, 108, 111, 119,  82, 101,  97,
    100,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ee0d86773199316 = b_9ee0d86773199316.words;
#if !CAPNP_LITE
static const uint16_t m_9ee0d86773199316[] = {1, 0};
static const uint16_t i_9ee0d86773199316[] = {0, 1};
const ::capnp::_::RawSchema s_9ee0d86773199316 = {
  0x9ee0d86773199316, b_9ee0d86773199316.words, 49, nullptr, m_9ee0d86773199316,
  0, 2, i_9ee0d86773199316, nullptr, nullptr, { &s_9ee0d86773199316, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_f5be1fa538e19124 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 145, 225,  56, 165,  31, 190, 245,
     17,   0,   0,   0,   4,   0,   0,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  67, 108, 111, 115, 101,  70,
    105, 108, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    105, 179, 204,  97, 252,   8, 123, 190,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5be1fa538e19124 = b_f5be1fa538e19124.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f5be1fa538e19124 = {
  0xf5be1fa538e19124, b_f5be1fa538e19124.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f5be1fa538e19124, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ce302860b9fcc657 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87, 198, 252, 185,  96,  40,  48, 206,
     17,   0,   0,   0,   1,   0,   1,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  67, 108, 111, 115, 101,  70, 105,
    108, 101,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ce302860b9fcc657 = b_ce302860b9fcc657.words;
#if !CAPNP_LITE
static const uint16_t m_ce302860b9fcc657[] = {0};
static const uint16_t i_ce302860b9fcc657[] = {0};
const ::capnp::_::RawSchema s_ce302860b9fcc657 = {
  0xce302860b9fcc657, b_ce302860b9fcc657.words, 34, nullptr, m_ce302860b9fcc657,
  0, 1, i_ce302860b9fcc657, nullptr, nullptr, { &s_ce302860b9fcc657, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bbe5bc78de95400f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15,  64, 149, 222, 120, 188, 229, 187,
     17,   0,   0,   0,   1,   0,   1,   0,
    219,  88, 243,  96, 123, 238,  65, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 108, 101, 115, 121, 115, 116,
    101, 109,  46,  99,  97, 112, 110, 112,
     58,  67, 108, 111, 115, 101,  70, 105,
    108, 101,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bbe5bc78de95400f = b_bbe5bc78de95400f.words;
#if !CAPNP_LITE
static const uint16_t m_bbe5bc78de95400f[] = {0};
static const uint16_t i_bbe5bc78de95400f[] = {0};
const ::capnp::_::RawSchema s_bbe5bc78de95400f = {
  0xbbe5bc78de95400f, b_bbe5bc78de95400f.words, 34, nullptr, m_bbe5bc78de95400f,
  0, 1, i_bbe5bc78de95400f, nullptr, nullptr, { &s_bbe5bc78de95400f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace rpc {
namespace _proto {
namespace messages {

// OpenFileRequest
constexpr uint16_t OpenFileRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t OpenFileRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OpenFileRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OpenFileRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OpenFileResponse
constexpr uint16_t OpenFileResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t OpenFileResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OpenFileResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OpenFileResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SlowReadRequest
constexpr uint16_t SlowReadRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SlowReadRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SlowReadRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SlowReadRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SlowReadResponse
constexpr uint16_t SlowReadResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SlowReadResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SlowReadResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SlowReadResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CloseFileRequest
constexpr uint16_t CloseFileRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CloseFileRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CloseFileRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CloseFileRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CloseFileResponse
constexpr uint16_t CloseFileResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t CloseFileResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CloseFileResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CloseFileResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

