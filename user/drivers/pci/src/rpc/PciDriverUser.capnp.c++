// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PciDriverUser.capnp

#include "PciDriverUser.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_a07100cacd81f625 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     37, 246, 129, 205, 202,   0, 113, 160,
     20,   0,   0,   0,   4,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58, 109, 101, 115, 115,
     97, 103, 101,  73, 100,  71, 101, 116,
     68, 101, 118, 105,  99, 101,  65, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    241,  51,  18,  51,  96,  65, 182, 213,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a07100cacd81f625 = b_a07100cacd81f625.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a07100cacd81f625 = {
  0xa07100cacd81f625, b_a07100cacd81f625.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a07100cacd81f625, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_82b7c65ad023321b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     27,  50,  35, 208,  90, 198, 183, 130,
     20,   0,   0,   0,   1,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  71, 101, 116,  68,
    101, 118, 105,  99, 101,  65, 116,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114, 101, 115, 115,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82b7c65ad023321b = b_82b7c65ad023321b.words;
#if !CAPNP_LITE
static const uint16_t m_82b7c65ad023321b[] = {0};
static const uint16_t i_82b7c65ad023321b[] = {0};
const ::capnp::_::RawSchema s_82b7c65ad023321b = {
  0x82b7c65ad023321b, b_82b7c65ad023321b.words, 34, nullptr, m_82b7c65ad023321b,
  0, 1, i_82b7c65ad023321b, nullptr, nullptr, { &s_82b7c65ad023321b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c35416ad823bf0f6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    246, 240,  59, 130, 173,  22,  84, 195,
     20,   0,   0,   0,   1,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  71, 101, 116,  68,
    101, 118, 105,  99, 101,  65, 116,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c35416ad823bf0f6 = b_c35416ad823bf0f6.words;
#if !CAPNP_LITE
static const uint16_t m_c35416ad823bf0f6[] = {0};
static const uint16_t i_c35416ad823bf0f6[] = {0};
const ::capnp::_::RawSchema s_c35416ad823bf0f6 = {
  0xc35416ad823bf0f6, b_c35416ad823bf0f6.words, 34, nullptr, m_c35416ad823bf0f6,
  0, 1, i_c35416ad823bf0f6, nullptr, nullptr, { &s_c35416ad823bf0f6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f3dee408b7cc46de = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222,  70, 204, 183,   8, 228, 222, 243,
     20,   0,   0,   0,   4,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58, 109, 101, 115, 115,
     97, 103, 101,  73, 100,  82, 101,  97,
    100,  67, 102, 103,  83, 112,  97,  99,
    101,  51,  50,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      8, 161,  86,   7,  51, 174,  27,  68,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f3dee408b7cc46de = b_f3dee408b7cc46de.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f3dee408b7cc46de = {
  0xf3dee408b7cc46de, b_f3dee408b7cc46de.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f3dee408b7cc46de, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_9ded87bcf330de6e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110, 222,  48, 243, 188, 135, 237, 157,
     20,   0,   0,   0,   1,   0,   1,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 101,  97, 100,
     67, 102, 103,  83, 112,  97,  99, 101,
     51,  50,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114, 101, 115, 115,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ded87bcf330de6e = b_9ded87bcf330de6e.words;
#if !CAPNP_LITE
static const uint16_t m_9ded87bcf330de6e[] = {0, 1};
static const uint16_t i_9ded87bcf330de6e[] = {0, 1};
const ::capnp::_::RawSchema s_9ded87bcf330de6e = {
  0x9ded87bcf330de6e, b_9ded87bcf330de6e.words, 50, nullptr, m_9ded87bcf330de6e,
  0, 2, i_9ded87bcf330de6e, nullptr, nullptr, { &s_9ded87bcf330de6e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a9befaaa6e3f35eb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    235,  53,  63, 110, 170, 250, 190, 169,
     20,   0,   0,   0,   1,   0,   1,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 101,  97, 100,
     67, 102, 103,  83, 112,  97,  99, 101,
     51,  50,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9befaaa6e3f35eb = b_a9befaaa6e3f35eb.words;
#if !CAPNP_LITE
static const uint16_t m_a9befaaa6e3f35eb[] = {0};
static const uint16_t i_a9befaaa6e3f35eb[] = {0};
const ::capnp::_::RawSchema s_a9befaaa6e3f35eb = {
  0xa9befaaa6e3f35eb, b_a9befaaa6e3f35eb.words, 35, nullptr, m_a9befaaa6e3f35eb,
  0, 1, i_a9befaaa6e3f35eb, nullptr, nullptr, { &s_a9befaaa6e3f35eb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f24cac4bb777aca9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    169, 172, 119, 183,  75, 172,  76, 242,
     20,   0,   0,   0,   4,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58, 109, 101, 115, 115,
     97, 103, 101,  73, 100,  87, 114, 105,
    116, 101,  67, 102, 103,  83, 112,  97,
     99, 101,  51,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     93, 159, 176, 176,  45, 187, 146, 222,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f24cac4bb777aca9 = b_f24cac4bb777aca9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f24cac4bb777aca9 = {
  0xf24cac4bb777aca9, b_f24cac4bb777aca9.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f24cac4bb777aca9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_fe8159351e191246 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70,  18,  25,  30,  53,  89, 129, 254,
     20,   0,   0,   0,   1,   0,   1,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  87, 114, 105, 116,
    101,  67, 102, 103,  83, 112,  97,  99,
    101,  51,  50,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114, 101, 115, 115,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe8159351e191246 = b_fe8159351e191246.words;
#if !CAPNP_LITE
static const uint16_t m_fe8159351e191246[] = {0, 1, 2};
static const uint16_t i_fe8159351e191246[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fe8159351e191246 = {
  0xfe8159351e191246, b_fe8159351e191246.words, 65, nullptr, m_fe8159351e191246,
  0, 3, i_fe8159351e191246, nullptr, nullptr, { &s_fe8159351e191246, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_e2594193fd020c9a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    154,  12,   2, 253, 147,  65,  89, 226,
     20,   0,   0,   0,   1,   0,   0,   0,
     60, 119, 158,  65, 139, 158, 205, 250,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  99, 105,  68, 114, 105, 118, 101,
    114,  85, 115, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  87, 114, 105, 116,
    101,  67, 102, 103,  83, 112,  97,  99,
    101,  51,  50,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_e2594193fd020c9a = b_e2594193fd020c9a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e2594193fd020c9a = {
  0xe2594193fd020c9a, b_e2594193fd020c9a.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e2594193fd020c9a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace rpc {
namespace _proto {
namespace messages {

// GetDeviceAtRequest
constexpr uint16_t GetDeviceAtRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetDeviceAtRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetDeviceAtRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetDeviceAtRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetDeviceAtResponse
constexpr uint16_t GetDeviceAtResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetDeviceAtResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetDeviceAtResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetDeviceAtResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ReadCfgSpace32Request
constexpr uint16_t ReadCfgSpace32Request::_capnpPrivate::dataWordSize;
constexpr uint16_t ReadCfgSpace32Request::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReadCfgSpace32Request::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReadCfgSpace32Request::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ReadCfgSpace32Response
constexpr uint16_t ReadCfgSpace32Response::_capnpPrivate::dataWordSize;
constexpr uint16_t ReadCfgSpace32Response::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReadCfgSpace32Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReadCfgSpace32Response::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// WriteCfgSpace32Request
constexpr uint16_t WriteCfgSpace32Request::_capnpPrivate::dataWordSize;
constexpr uint16_t WriteCfgSpace32Request::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WriteCfgSpace32Request::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WriteCfgSpace32Request::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// WriteCfgSpace32Response
constexpr uint16_t WriteCfgSpace32Response::_capnpPrivate::dataWordSize;
constexpr uint16_t WriteCfgSpace32Response::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WriteCfgSpace32Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WriteCfgSpace32Response::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

