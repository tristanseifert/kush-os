// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: DiskDriver.capnp

#include "DiskDriver.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<25> b_a3465d32a28163a2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162,  99, 129, 162,  50,  93,  70, 163,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  71, 101, 116,  67,  97, 112,
     97,  99, 105, 116, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    181,  12, 139, 243, 229,  73, 223, 145,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3465d32a28163a2 = b_a3465d32a28163a2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a3465d32a28163a2 = {
  0xa3465d32a28163a2, b_a3465d32a28163a2.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a3465d32a28163a2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d9140777d14e750e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 117,  78, 209, 119,   7,  20, 217,
     17,   0,   0,   0,   1,   0,   1,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  71, 101, 116,  67,  97, 112,  97,
     99, 105, 116, 121,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100, 105, 115, 107,  73, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d9140777d14e750e = b_d9140777d14e750e.words;
#if !CAPNP_LITE
static const uint16_t m_d9140777d14e750e[] = {0};
static const uint16_t i_d9140777d14e750e[] = {0};
const ::capnp::_::RawSchema s_d9140777d14e750e = {
  0xd9140777d14e750e, b_d9140777d14e750e.words, 34, nullptr, m_d9140777d14e750e,
  0, 1, i_d9140777d14e750e, nullptr, nullptr, { &s_d9140777d14e750e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_d7df01e46f99d66b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107, 214, 153, 111, 228,   1, 223, 215,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  71, 101, 116,  67,  97, 112,  97,
     99, 105, 116, 121,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  99, 116, 111, 114,  83, 105,
    122, 101,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  83, 101,  99, 116, 111,
    114, 115,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7df01e46f99d66b = b_d7df01e46f99d66b.words;
#if !CAPNP_LITE
static const uint16_t m_d7df01e46f99d66b[] = {2, 1, 0};
static const uint16_t i_d7df01e46f99d66b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d7df01e46f99d66b = {
  0xd7df01e46f99d66b, b_d7df01e46f99d66b.words, 66, nullptr, m_d7df01e46f99d66b,
  0, 3, i_d7df01e46f99d66b, nullptr, nullptr, { &s_d7df01e46f99d66b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_ccafb851048ad6a0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160, 214, 138,   4,  81, 184, 175, 204,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  79, 112, 101, 110,  83, 101,
    115, 115, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     95,  44, 238, 154, 168,  26,  78,  15,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccafb851048ad6a0 = b_ccafb851048ad6a0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ccafb851048ad6a0 = {
  0xccafb851048ad6a0, b_ccafb851048ad6a0.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ccafb851048ad6a0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_f2c08c0880bb56e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230,  86, 187, 128,   8, 140, 192, 242,
     17,   0,   0,   0,   1,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  79, 112, 101, 110,  83, 101, 115,
    115, 105, 111, 110,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f2c08c0880bb56e6 = b_f2c08c0880bb56e6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f2c08c0880bb56e6 = {
  0xf2c08c0880bb56e6, b_f2c08c0880bb56e6.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f2c08c0880bb56e6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<98> b_faacd1514428878f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143, 135,  40,  68,  81, 209, 172, 250,
     17,   0,   0,   0,   1,   0,   5,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  79, 112, 101, 110,  83, 101, 115,
    115, 105, 111, 110,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  84,
    111, 107, 101, 110,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 103, 105, 111, 110,  72,  97,
    110, 100, 108, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 103, 105, 111, 110,  83, 105,
    122, 101,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  67, 111, 109, 109,  97,
    110, 100, 115,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_faacd1514428878f = b_faacd1514428878f.words;
#if !CAPNP_LITE
static const uint16_t m_faacd1514428878f[] = {4, 2, 3, 1, 0};
static const uint16_t i_faacd1514428878f[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_faacd1514428878f = {
  0xfaacd1514428878f, b_faacd1514428878f.words, 98, nullptr, m_faacd1514428878f,
  0, 5, i_faacd1514428878f, nullptr, nullptr, { &s_faacd1514428878f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_ee201a7551fb66db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219, 102, 251,  81, 117,  26,  32, 238,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  67, 108, 111, 115, 101,  83,
    101, 115, 115, 105, 111, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    251,  96,  71, 151, 119,  55, 172, 189,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee201a7551fb66db = b_ee201a7551fb66db.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ee201a7551fb66db = {
  0xee201a7551fb66db, b_ee201a7551fb66db.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ee201a7551fb66db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e282741febde91bc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188, 145, 222, 235,  31, 116, 130, 226,
     17,   0,   0,   0,   1,   0,   1,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 108, 111, 115, 101,  83, 101,
    115, 115, 105, 111, 110,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e282741febde91bc = b_e282741febde91bc.words;
#if !CAPNP_LITE
static const uint16_t m_e282741febde91bc[] = {0};
static const uint16_t i_e282741febde91bc[] = {0};
const ::capnp::_::RawSchema s_e282741febde91bc = {
  0xe282741febde91bc, b_e282741febde91bc.words, 34, nullptr, m_e282741febde91bc,
  0, 1, i_e282741febde91bc, nullptr, nullptr, { &s_e282741febde91bc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f479e93a887b7233 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51, 114, 123, 136,  58, 233, 121, 244,
     17,   0,   0,   0,   1,   0,   1,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 108, 111, 115, 101,  83, 101,
    115, 115, 105, 111, 110,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f479e93a887b7233 = b_f479e93a887b7233.words;
#if !CAPNP_LITE
static const uint16_t m_f479e93a887b7233[] = {0};
static const uint16_t i_f479e93a887b7233[] = {0};
const ::capnp::_::RawSchema s_f479e93a887b7233 = {
  0xf479e93a887b7233, b_f479e93a887b7233.words, 34, nullptr, m_f479e93a887b7233,
  0, 1, i_f479e93a887b7233, nullptr, nullptr, { &s_f479e93a887b7233, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f8907388d9bb9096 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150, 144, 187, 217, 136, 115, 144, 248,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  67, 114, 101,  97, 116, 101,
     82, 101,  97, 100,  66, 117, 102, 102,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     99,  98, 165, 203, 158,  22,  99,  92,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8907388d9bb9096 = b_f8907388d9bb9096.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f8907388d9bb9096 = {
  0xf8907388d9bb9096, b_f8907388d9bb9096.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f8907388d9bb9096, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_da63fc18d9e9c10c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 193, 233, 217,  24, 252,  99, 218,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 114, 101,  97, 116, 101,  82,
    101,  97, 100,  66, 117, 102, 102, 101,
    114,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116, 101,
    100,  83, 105, 122, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da63fc18d9e9c10c = b_da63fc18d9e9c10c.words;
#if !CAPNP_LITE
static const uint16_t m_da63fc18d9e9c10c[] = {1, 0};
static const uint16_t i_da63fc18d9e9c10c[] = {0, 1};
const ::capnp::_::RawSchema s_da63fc18d9e9c10c = {
  0xda63fc18d9e9c10c, b_da63fc18d9e9c10c.words, 51, nullptr, m_da63fc18d9e9c10c,
  0, 2, i_da63fc18d9e9c10c, nullptr, nullptr, { &s_da63fc18d9e9c10c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_8daf9646e489c1d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 193, 137, 228,  70, 150, 175, 141,
     17,   0,   0,   0,   1,   0,   3,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 114, 101,  97, 116, 101,  82,
    101,  97, 100,  66, 117, 102, 102, 101,
    114,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  66, 117, 102,  72,
     97, 110, 100, 108, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  66, 117, 102,  77,
     97, 120,  83, 105, 122, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8daf9646e489c1d1 = b_8daf9646e489c1d1.words;
#if !CAPNP_LITE
static const uint16_t m_8daf9646e489c1d1[] = {1, 2, 0};
static const uint16_t i_8daf9646e489c1d1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8daf9646e489c1d1 = {
  0x8daf9646e489c1d1, b_8daf9646e489c1d1.words, 67, nullptr, m_8daf9646e489c1d1,
  0, 3, i_8daf9646e489c1d1, nullptr, nullptr, { &s_8daf9646e489c1d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f19e38d62769e277 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119, 226, 105,  39, 214,  56, 158, 241,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  67, 114, 101,  97, 116, 101,
     87, 114, 105, 116, 101,  66, 117, 102,
    102, 101, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    252,   5, 240,   9, 104,  16,  71,  38,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f19e38d62769e277 = b_f19e38d62769e277.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f19e38d62769e277 = {
  0xf19e38d62769e277, b_f19e38d62769e277.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f19e38d62769e277, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_a6250cb957d7fa6e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110, 250, 215,  87, 185,  12,  37, 166,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 114, 101,  97, 116, 101,  87,
    114, 105, 116, 101,  66, 117, 102, 102,
    101, 114,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116, 101,
    100,  83, 105, 122, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6250cb957d7fa6e = b_a6250cb957d7fa6e.words;
#if !CAPNP_LITE
static const uint16_t m_a6250cb957d7fa6e[] = {1, 0};
static const uint16_t i_a6250cb957d7fa6e[] = {0, 1};
const ::capnp::_::RawSchema s_a6250cb957d7fa6e = {
  0xa6250cb957d7fa6e, b_a6250cb957d7fa6e.words, 51, nullptr, m_a6250cb957d7fa6e,
  0, 2, i_a6250cb957d7fa6e, nullptr, nullptr, { &s_a6250cb957d7fa6e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_f17ef011bcb37f09 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 127, 179, 188,  17, 240, 126, 241,
     17,   0,   0,   0,   1,   0,   3,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  67, 114, 101,  97, 116, 101,  87,
    114, 105, 116, 101,  66, 117, 102, 102,
    101, 114,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101,  66, 117, 102,
     72,  97, 110, 100, 108, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101,  66, 117, 102,
     77,  97, 120,  83, 105, 122, 101,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f17ef011bcb37f09 = b_f17ef011bcb37f09.words;
#if !CAPNP_LITE
static const uint16_t m_f17ef011bcb37f09[] = {0, 1, 2};
static const uint16_t i_f17ef011bcb37f09[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f17ef011bcb37f09 = {
  0xf17ef011bcb37f09, b_f17ef011bcb37f09.words, 67, nullptr, m_f17ef011bcb37f09,
  0, 3, i_f17ef011bcb37f09, nullptr, nullptr, { &s_f17ef011bcb37f09, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_ea21102104410f26 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38,  15,  65,   4,  33,  16,  33, 234,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  69, 120, 101,  99, 117, 116,
    101,  67, 111, 109, 109,  97, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     25, 224,  73,   0, 239, 187, 229, 170,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea21102104410f26 = b_ea21102104410f26.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ea21102104410f26 = {
  0xea21102104410f26, b_ea21102104410f26.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ea21102104410f26, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9cdcb357c5c71f06 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6,  31, 199, 197,  87, 179, 220, 156,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  69, 120, 101,  99, 117, 116, 101,
     67, 111, 109, 109,  97, 110, 100,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 108, 111, 116,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9cdcb357c5c71f06 = b_9cdcb357c5c71f06.words;
#if !CAPNP_LITE
static const uint16_t m_9cdcb357c5c71f06[] = {0, 1};
static const uint16_t i_9cdcb357c5c71f06[] = {0, 1};
const ::capnp::_::RawSchema s_9cdcb357c5c71f06 = {
  0x9cdcb357c5c71f06, b_9cdcb357c5c71f06.words, 49, nullptr, m_9cdcb357c5c71f06,
  0, 2, i_9cdcb357c5c71f06, nullptr, nullptr, { &s_9cdcb357c5c71f06, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_affc6b1a5f5e14f4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244,  20,  94,  95,  26, 107, 252, 175,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  82, 101, 108, 101,  97, 115,
    101,  82, 101,  97, 100,  67, 111, 109,
    109,  97, 110, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    106, 145, 104, 119, 117,  96, 195, 220,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_affc6b1a5f5e14f4 = b_affc6b1a5f5e14f4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_affc6b1a5f5e14f4 = {
  0xaffc6b1a5f5e14f4, b_affc6b1a5f5e14f4.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_affc6b1a5f5e14f4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_b3fe250323841568 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104,  21, 132,  35,   3,  37, 254, 179,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  82, 101, 108, 101,  97, 115, 101,
     82, 101,  97, 100,  67, 111, 109, 109,
     97, 110, 100,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 108, 111, 116,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b3fe250323841568 = b_b3fe250323841568.words;
#if !CAPNP_LITE
static const uint16_t m_b3fe250323841568[] = {0, 1};
static const uint16_t i_b3fe250323841568[] = {0, 1};
const ::capnp::_::RawSchema s_b3fe250323841568 = {
  0xb3fe250323841568, b_b3fe250323841568.words, 50, nullptr, m_b3fe250323841568,
  0, 2, i_b3fe250323841568, nullptr, nullptr, { &s_b3fe250323841568, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_bc3131b31000c34b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75, 195,   0,  16, 179,  49,  49, 188,
     17,   0,   0,   0,   4,   0,   0,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58, 109, 101, 115, 115,  97, 103, 101,
     73, 100,  65, 108, 108, 111,  99,  87,
    114, 105, 116, 101,  77, 101, 109, 111,
    114, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    246, 106,  15, 211, 224, 250, 193,  61,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc3131b31000c34b = b_bc3131b31000c34b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bc3131b31000c34b = {
  0xbc3131b31000c34b, b_bc3131b31000c34b.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bc3131b31000c34b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ee1d47927b5940d4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212,  64,  89, 123, 146,  71,  29, 238,
     17,   0,   0,   0,   1,   0,   2,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  65, 108, 108, 111,  99,  87, 114,
    105, 116, 101,  77, 101, 109, 111, 114,
    121,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,  82, 101, 113,
    117, 101, 115, 116, 101, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee1d47927b5940d4 = b_ee1d47927b5940d4.words;
#if !CAPNP_LITE
static const uint16_t m_ee1d47927b5940d4[] = {1, 0};
static const uint16_t i_ee1d47927b5940d4[] = {0, 1};
const ::capnp::_::RawSchema s_ee1d47927b5940d4 = {
  0xee1d47927b5940d4, b_ee1d47927b5940d4.words, 51, nullptr, m_ee1d47927b5940d4,
  0, 2, i_ee1d47927b5940d4, nullptr, nullptr, { &s_ee1d47927b5940d4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_f04b06ab3122e5f8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248, 229,  34,  49, 171,   6,  75, 240,
     17,   0,   0,   0,   1,   0,   3,   0,
     91,  10, 130, 117,  36, 140, 213, 236,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 105, 115, 107,  68, 114, 105, 118,
    101, 114,  46,  99,  97, 112, 110, 112,
     58,  65, 108, 108, 111,  99,  87, 114,
    105, 116, 101,  77, 101, 109, 111, 114,
    121,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,  65, 108, 108,
    111,  99,  97, 116, 101, 100,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f04b06ab3122e5f8 = b_f04b06ab3122e5f8.words;
#if !CAPNP_LITE
static const uint16_t m_f04b06ab3122e5f8[] = {2, 1, 0};
static const uint16_t i_f04b06ab3122e5f8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f04b06ab3122e5f8 = {
  0xf04b06ab3122e5f8, b_f04b06ab3122e5f8.words, 66, nullptr, m_f04b06ab3122e5f8,
  0, 3, i_f04b06ab3122e5f8, nullptr, nullptr, { &s_f04b06ab3122e5f8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace rpc {
namespace _proto {
namespace messages {

// GetCapacityRequest
constexpr uint16_t GetCapacityRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetCapacityRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetCapacityRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetCapacityRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetCapacityResponse
constexpr uint16_t GetCapacityResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetCapacityResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetCapacityResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetCapacityResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OpenSessionRequest
constexpr uint16_t OpenSessionRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t OpenSessionRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OpenSessionRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OpenSessionRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OpenSessionResponse
constexpr uint16_t OpenSessionResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t OpenSessionResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OpenSessionResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OpenSessionResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CloseSessionRequest
constexpr uint16_t CloseSessionRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CloseSessionRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CloseSessionRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CloseSessionRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CloseSessionResponse
constexpr uint16_t CloseSessionResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t CloseSessionResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CloseSessionResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CloseSessionResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CreateReadBufferRequest
constexpr uint16_t CreateReadBufferRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateReadBufferRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateReadBufferRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateReadBufferRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CreateReadBufferResponse
constexpr uint16_t CreateReadBufferResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateReadBufferResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateReadBufferResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateReadBufferResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CreateWriteBufferRequest
constexpr uint16_t CreateWriteBufferRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateWriteBufferRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateWriteBufferRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateWriteBufferRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CreateWriteBufferResponse
constexpr uint16_t CreateWriteBufferResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateWriteBufferResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateWriteBufferResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateWriteBufferResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ExecuteCommandRequest
constexpr uint16_t ExecuteCommandRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ExecuteCommandRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExecuteCommandRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExecuteCommandRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ReleaseReadCommandRequest
constexpr uint16_t ReleaseReadCommandRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ReleaseReadCommandRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReleaseReadCommandRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReleaseReadCommandRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// AllocWriteMemoryRequest
constexpr uint16_t AllocWriteMemoryRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t AllocWriteMemoryRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AllocWriteMemoryRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AllocWriteMemoryRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// AllocWriteMemoryResponse
constexpr uint16_t AllocWriteMemoryResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t AllocWriteMemoryResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AllocWriteMemoryResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AllocWriteMemoryResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

