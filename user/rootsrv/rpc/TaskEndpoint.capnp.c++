// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TaskEndpoint.capnp

#include "TaskEndpoint.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<53> b_e7d28da39cfb7738 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56, 119, 251, 156, 163, 141, 210, 231,
     19,   0,   0,   0,   1,   0,   0,   0,
    150, 245,  50, 243, 255, 145, 142, 150,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,  97, 115, 107,  69, 110, 100, 112,
    111, 105, 110, 116,  46,  99,  97, 112,
    110, 112,  58,  67, 114, 101,  97, 116,
    101,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d28da39cfb7738 = b_e7d28da39cfb7738.words;
#if !CAPNP_LITE
static const uint16_t m_e7d28da39cfb7738[] = {1, 0};
static const uint16_t i_e7d28da39cfb7738[] = {0, 1};
const ::capnp::_::RawSchema s_e7d28da39cfb7738 = {
  0xe7d28da39cfb7738, b_e7d28da39cfb7738.words, 53, nullptr, m_e7d28da39cfb7738,
  0, 2, i_e7d28da39cfb7738, nullptr, nullptr, { &s_e7d28da39cfb7738, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_d9a2f0bb7e95ab67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 171, 149, 126, 187, 240, 162, 217,
     19,   0,   0,   0,   1,   0,   2,   0,
    150, 245,  50, 243, 255, 145, 142, 150,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,  97, 115, 107,  69, 110, 100, 112,
    111, 105, 110, 116,  46,  99,  97, 112,
    110, 112,  58,  67, 114, 101,  97, 116,
    101,  82, 101, 112, 108, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d9a2f0bb7e95ab67 = b_d9a2f0bb7e95ab67.words;
#if !CAPNP_LITE
static const uint16_t m_d9a2f0bb7e95ab67[] = {1, 0};
static const uint16_t i_d9a2f0bb7e95ab67[] = {0, 1};
const ::capnp::_::RawSchema s_d9a2f0bb7e95ab67 = {
  0xd9a2f0bb7e95ab67, b_d9a2f0bb7e95ab67.words, 48, nullptr, m_d9a2f0bb7e95ab67,
  0, 2, i_d9a2f0bb7e95ab67, nullptr, nullptr, { &s_d9a2f0bb7e95ab67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_c1300bf233c1e5b2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 229, 193,  51, 242,  11,  48, 193,
     19,   0,   0,   0,   4,   0,   0,   0,
    150, 245,  50, 243, 255, 145, 142, 150,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,  97, 115, 107,  69, 110, 100, 112,
    111, 105, 110, 116,  46,  99,  97, 112,
    110, 112,  58, 107,  84, 121, 112, 101,
     67, 114, 101,  97, 116, 101,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,  67,  75,  83,  84,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1300bf233c1e5b2 = b_c1300bf233c1e5b2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c1300bf233c1e5b2 = {
  0xc1300bf233c1e5b2, b_c1300bf233c1e5b2.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c1300bf233c1e5b2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_ad3d3e9f242698aa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    170, 152,  38,  36, 159,  62,  61, 173,
     19,   0,   0,   0,   4,   0,   0,   0,
    150, 245,  50, 243, 255, 145, 142, 150,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
     44,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,  97, 115, 107,  69, 110, 100, 112,
    111, 105, 110, 116,  46,  99,  97, 112,
    110, 112,  58, 107,  84, 121, 112, 101,
     67, 114, 101,  97, 116, 101,  82, 101,
    112, 108, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,  67,  75,  83, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad3d3e9f242698aa = b_ad3d3e9f242698aa.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ad3d3e9f242698aa = {
  0xad3d3e9f242698aa, b_ad3d3e9f242698aa.words, 25, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ad3d3e9f242698aa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace rpc {
namespace TaskEndpoint {

// CreateRequest
constexpr uint16_t CreateRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// CreateReply
constexpr uint16_t CreateReply::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateReply::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateReply::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateReply::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

